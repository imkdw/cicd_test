name: Deploy hdev_server to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        id: checkout-code
        uses: actions/checkout@v3

      - name: AWS IAM 사용자 설정
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: ECR에 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: 도커 이미지 빌드
        id: build-docker-image
        run: |
          docker build -t test-app ./test-app

      - name: 도커 이미지를 ECR에 업로드
        id: push-image
        run: |
          docker tag test-app 280926337264.dkr.ecr.ap-northeast-2.amazonaws.com/hellodeveloper
          docker push 280926337264.dkr.ecr.ap-northeast-2.amazonaws.com/hellodeveloper
          echo "${{ steps.login-ecr.outputs.registry }}/${{ github.repository }}:${{ github.sha }}" >> $GITHUB_ENV

      # - name: EC2에서 도커 이미지를 가져오기
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.EC2_IP }}
      #     username: ${{ secrets.EC2_USERNAME }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       docker pull ${{ steps.push-image.outputs.image_url }}

      # - name: ECR에서 불러온 이미지를 도커에서 실행
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.EC2_IP }}
      #     username: ${{ secrets.EC2_USERNAME }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       docker stop test-app || true
      #       docker rm test-app || true
      #       docker run -d --name test-app -p 80:3000 ${{ steps.push-image.outputs.image_url }}
